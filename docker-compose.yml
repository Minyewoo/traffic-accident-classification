version: "3.9"
services:
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.9.25-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./data/rabbitmq/:/var/lib/rabbitmq/
    networks:
      - rabbitmq_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 300s
      timeout: 30s
      retries: 5
    
  
  redis:
    hostname: redis
    image: nyaaneet/rejson:v2.4.0
    ports:
      - 6379:6379
    networks:
      - redis_net
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 300s
      timeout: 30s
      retries: 5
  
  traffic_events_crawler:
    env_file:
      - ./crawler/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - CRAWLER_TYPE=traffic_events
    build:
      context: ./crawler/
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
      - redis
    networks:
      - redis_net
      - rabbitmq_net

  weather_forecast_crawler:
    env_file:
      - ./crawler/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - CRAWLER_TYPE=weather_forecast
    build:
      context: ./crawler/
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
      - redis
    networks:
      - redis_net
      - rabbitmq_net

  scheduler:
    env_file:
      - ./scheduler/.env
    environment:
      - RABBITMQ_HOST=rabbitmq
    build:
      context: ./scheduler/
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_net

networks:
  redis_net:
    driver: bridge

  rabbitmq_net:
    driver: bridge
